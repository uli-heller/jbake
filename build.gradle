apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

group = 'org.jbake'
version = '2.4.0-uli1'

description = """jbake"""

mainClassName="org.jbake.launcher.Main"
applicationName="jbake" // used for the start script

sourceCompatibility = 1.6
targetCompatibility = 1.6

sourceSets {
   test {
     //if you truly want to override the defaults:
     output.resourcesDir = 'build/classes/test'
     output.classesDir   = 'build/classes/test'
   }
}

configurations.all {
}

repositories {
        
     //maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.palominolabs.gradle.task:gradle-git-clone-task:0.0.2'
  }
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-configuration', name: 'commons-configuration', version:'1.9'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version:'1.1.1'
    compile group: 'args4j', name: 'args4j', version:'2.0.26'
    compile group: 'org.freemarker', name: 'freemarker', version:'2.3.20'
    compile group: 'com.orientechnologies', name: 'orient-commons', version:'1.6.4'
    compile group: 'com.orientechnologies', name: 'orientdb-core', version:'1.6.4'
    compile group: 'org.pegdown', name: 'pegdown', version:'1.5.0'
    compile group: 'org.asciidoctor', name: 'asciidoctorj', version:'1.5.2'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version:'8.1.12.v20130726'
    compile group: 'org.codehaus.groovy', name: 'groovy', version:'2.3.6'
    compile group: 'org.codehaus.groovy', name: 'groovy-templates', version:'2.3.6'
    compile group: 'org.thymeleaf', name: 'thymeleaf', version:'2.1.3.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-conditionalcomments', version:'2.1.1.RELEASE'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.6'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version:'1.7.6'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.1'
    compile group: 'ch.qos.logback', name: 'logback-core', version:'1.1.1'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.assertj', name: 'assertj-core', version:'1.7.0'
}
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:mvn-repo/")
        }
    }
}

task cloneExampleProjectFreemarker(type: com.palominolabs.gradle.task.git.clone.GitCloneTask) {
  dir = file("$buildDir/example-project-freemarker")
  uri = 'git@github.com:jbake-org/jbake-example-project-freemarker.git'
  treeish = 'origin/master' // a git hash, or tag name, or branch name
}
task cloneExampleProjectGroovy(type: com.palominolabs.gradle.task.git.clone.GitCloneTask) {
  dir = file("$buildDir/example-project-groovy")
  uri = 'git@github.com:jbake-org/jbake-example-project-groovy.git'
  treeish = 'origin/master' // a git hash, or tag name, or branch name
}
task cloneExampleProjectThymeleaf(type: com.palominolabs.gradle.task.git.clone.GitCloneTask) {
  dir = file("$buildDir/example-project-thymeleaf")
  uri = 'git@github.com:jbake-org/jbake-example-project-thymeleaf.git'
  treeish = 'origin/master' // a git hash, or tag name, or branch name
}

task cloneExampleProjects(dependsOn: [cloneExampleProjectFreemarker, cloneExampleProjectGroovy, cloneExampleProjectThymeleaf])

task zipExampleProjectFreemarker(type: Zip, dependsOn: cloneExampleProjectFreemarker) {
  archiveName = "example-project-freemarker.zip"
  from "${buildDir}/example-project-freemarker"
  exclude "README.md"
  exclude "LICENSE"
}
task zipExampleProjectGroovy(type: Zip, dependsOn: cloneExampleProjectGroovy) {
  archiveName = "example-project-groovy.zip"
  from "${buildDir}/example-project-groovy"
  exclude "README.md"
  exclude "LICENSE"
}
task zipExampleProjectThymeleaf(type: Zip, dependsOn: cloneExampleProjectThymeleaf) {
  archiveName = "example-project-thymeleaf.zip"
  from "${buildDir}/example-project-thymeleaf"
  exclude "README.md"
  exclude "LICENSE"
}

task zipExampleProjects(dependsOn: [zipExampleProjectFreemarker, zipExampleProjectGroovy, zipExampleProjectThymeleaf]) {
  outputs.files "${distsDir}/example-project-freemarker.zip";
  outputs.files "${distsDir}/example-project-groovy.zip";
  outputs.files "${distsDir}/example-project-thymeleaf.zip";
}

distributions {
    main {
        contents {
          from(zipExampleProjects)
	  into("lib") {
            from "src/main/logging/logback.xml"
          }
        }
    }
}

test.dependsOn cloneExampleProjects
